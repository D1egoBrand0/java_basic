package Ch02;

public class C02음수 {

	public static void main(String[] args) {
//		컴퓨터(CPU)는 가산회로에 의한 가산처리가 가능하다? O
//		컴퓨터(CPU)는 감산회로에 의한 감산처리가 가능하다? X
//		컴퓨터(CPU)는 보수개념을 이용하여 뺄셈결과를 전달할 수 있다.
//		9-3=6
//		9+(7)=16 그리고 10을 버린다.
//		75-22 = 53
//		75+78=153 그리고 증가한 한자리 백의자리 1을 버린다.
				
//		00000101		=		5
//		11111011		=	   -5	    (2)의 보수
//		11111010		=	   -6 		(1)의보수
//			   1
//		-------------------------
//	   100000000		=		0 		튀어나간 1은 버려버린다.
		
		
//		MSB(부호비트) : 가장 왼쪽 1bit를 양수 혹은 음수로 판단하는 bit로 사용
//		 			  저장공간(변수공간)에서 부호비트를 지원하면(Signed)
//					  1:음수값, 0: 양수값으로 해석
//					  저장공간(변수공간)에서 부호비트를 지원하지 않으면(Unsigned)
//					  0,1:양수
		
		
//		문제 
//		10진수->2진수
//		10		00001010
//		-10		11110110			
		System.out.println((byte)(0b00001010)+(byte)(0b11110110));
//		111		01101111
//		-111	10010001
		System.out.println((byte)(0b01101111)+(byte)(0b10010001));
//		96		01100000
//		
//		2진수 ->10진수
//		10101010	-86
//		01010110	양수 86
//		11001101	-51
//		00110011	양수 51
//		10010010	-110
//		01101110	양수110
		
//		좀더 편하게
//		-128에 그냥 2진수 읽는거 더하기
//		10000001 = -128 + 1
//		10000100 = -128 + 4
//		11111111 = -128 + 127 = -1
		System.out.println((byte)(0b01101110));

		
		
//		long   2^31승 +- 각각
//		float  4바이트 실수
//		double 8바이트 실수
//		불린 	   true, false
		
		
		
	}

}
